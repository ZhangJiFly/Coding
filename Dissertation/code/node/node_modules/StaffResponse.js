
module.exports = function(connection){
  var response = function(req, res){
    var file = req.params.file;
    var StaffId = req.session.user.StaffId;
    var school = req.session.user.School;
    var degree = req.query.degree;
    if (file == "home"){
      var name = req.session.user.Forename + " " + req.session.user.Surname;
      var email = req.session.user.Email;
      var staffId = req.session.user.StaffId;
      userX = {name: name, staffId: staffId, email: email}
      var html = jadeTemp['StaffHome'](userX);
      res.render(html);
    }
    else if (file == "advisor"){
      query.advisees(StaffId, function(rows){
        var Data = JSON.stringify(rows);
        html = jadeTemp[file](aaData = JSON.stringify(rows));
        res.render(html);
      });
    }
    else if (file == "degree"){
      query.degreeCourseLists(degree, function(dCourseLists){
        query.courseLists(school, function(allCourseLists){
          query.singleDegree(degree, function(fullDegree){
            console.log(allCourseLists);
            html = jadeTemp[file](Degree = degree, degreeDetails = JSON.stringify(fullDegree), School = school, dCourseLists = JSON.stringify(dCourseLists), AllCourseLists = JSON.stringify(allCourseLists, CreateYears = createYears));
            res.render(html);
          });
        });
      });
    }
    else if (file == "school"){
      query.degrees(school, function(degreeRows){
        query.courseLists(school,function(courseRows){
          html = jadeTemp[file](Degrees = JSON.stringify(degreeRows), CL = JSON.stringify(courseRows), School = school);
          res.render(html);
        });
      });
    }
    else{
      res.sendfile("/Users/Crippled.Josh/Coding/Dissertation/code/Staff/" + file);   
    }
  }
  return {response:response};
}