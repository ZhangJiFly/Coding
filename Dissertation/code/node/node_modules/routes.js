module.exports = function(auth, query){
	var express = require('express'),
	app = express(),
	response = require('Response')(query)
	server = require('http').createServer(app);

	app.use(express.bodyParser());
	app.use(express.cookieParser('shhhh, very secret'));
	app.use(express.session());
	app.use(function(req, res, next){
		var err = req.session.error,
		msg = req.session.success;
		delete req.session.error;
		delete req.session.success;
		res.locals.message = '';
		if (err) res.locals.message = '<p class="msg error">' + err + '</p>';
		if (msg) res.locals.message = '<p class="msg success">' + msg + '</p>';
		next();
	});
	app.set('view engine', 'jade');

	app.get('/Student/:file', auth.restrictStudent, function(req, res){
	  response.Student(req,res);
	});

	app.get('/Staff/:file', auth.restrictStaff, function(req, res){
	  response.Staff(req,res);
	});

	app.get('/login', function(req, res){
	  res.render('/login.html');
	});

	app.get('/', function(req, res){
	  res.redirect('/login.html');
	});

	app.get('/logout', function(req, res){
	  // destroy the user's session to log them out
	  req.session.destroy(function(){
	    res.redirect('/login.html');
	  });
	});

	app.get('/:file',  function (req, res) {
	  var file = req.params.file;
	  res.sendfile("/Users/Crippled.Josh/Coding/Dissertation/code/" + file);

	});

	app.get('/js/libs/:lib/:file', function (req, res) {
	  var file = req.params.file,
	  lib = req.params.lib;
	 res.sendfile("/Users/Crippled.Josh/Coding/Dissertation/code/js/libs/" + lib + '/' + file);
	});

	app.get('/js/libs/:lib/media/js/:file', function (req, res) {
	  var file = req.params.file,
	  lib = req.params.lib,
	  sub1 = req.params.sub1,
	  sub2 = req.params.sub2;
	 res.sendfile("/Users/Crippled.Josh/Coding/Dissertation/code/js/libs/" + lib + '/media/js/' + file);
	});

	app.get('/js/libs/:lib/:sub/:file', function (req, res) {
	  var file = req.params.file,
	  lib = req.params.lib,
	  sub = req.params.sub;
	 res.sendfile("/Users/Crippled.Josh/Coding/Dissertation/code/js/libs/" + lib + '/'+sub+'/' + file);
	});

	app.get('/css/:file', function (req, res) {
	  var file = req.params.file,
	    folder = req.params.folder;
	    res.sendfile("/Users/Crippled.Josh/Coding/Dissertation/code/css/" + file);
	});

	app.post('/loginStudent', function(req, res){
	  auth.authenticate(req.body.username, req.body.password, "Student", function(err, user){
	    if (user) {
	      req.session.regenerate(function(){
	        req.session.user = user;
	        req.session.level = 0;
	        var StaffId = user.StaffId;
	        query.getAdvisor(StaffId, function(rows){
	          var Advisor = rows[0]
	          req.session.user.Advisor = Advisor;
	          req.session.success = 'Authenticated as ' + user.name
	            + ' click to <a href="/logout">logout</a>. '
	           + ' You may now access <a href="/Student">/Student</a>.';
	          res.redirect('/Student/home.html');
	        });
	      });
	    } else {
	      req.session.error = 'Authentication failed, please check your username and password.';
	      res.redirect('/login.html');
	    }
	  });
	});

	app.post('/loginStaff', function(req, res){
	  auth.authenticate(req.body.username, req.body.password, "Staff", function(err, user){
	    if (user) {
	      req.session.regenerate(function(){
	        req.session.user = user;
	        req.session.level = 1;
	          req.session.success = 'Authenticated as ' + user.name
	            + ' click to <a href="/logout">logout</a>. '
	            + ' You may now access <a href="/Student">/Student</a>.';
	          res.redirect('/Staff/home');
	      });
	    } else {
	      req.session.error = 'Authentication failed, please check your username and password.';
	      res.redirect('/login.html');
	    }
	  });
	});

	app.post('/CreateCourseList', function(req, res){
		var data = req.body;
		query.updateCourseList(data);
    	query.updateGroup(data);
		res.redirect('/Staff/school');// doesnt work don't know why. 
	});

	app.post('/AssignCourseListNames', function(req, res){
		var data = req.body;
		var school = data.school;
		var degree = data.degree;
		console.log(data);
		for (var i = 0; i<data.courseLists.length;i++){
			query.updateDegreeCourseLists(degree, school, i + 1, data.courseLists[i], function(){

			})
		}
		
		res.redirect('Staff/school');// doesnt work don't know why. 
	});

	app.post('/enrolInCourse', function(req, res){
		var course = req.body;
		query.updateEnrolment(matric, course)
		
		res.status(200);
	});

	return server;
}