html
  script(src='/js/libs/requirejs/require.js')
  script(src='/requireconfig.js')
  link(rel='stylesheet', type='text/css', href='/css/bootstrap.css')
  link(rel='stylesheet', type='text/css', href='/css/bootstrap-theme.css')
  link(href='/css/starterTemp.css', rel='stylesheet')
  script
    require.config({
      baseUrl: "../js",
    });

    require(['jquery', 'socket.io', 'datatables'], function($, io, dataTable){
      var groupCounter = 0;
      var choices = [];
      var coursesTables = [];
      var choicesTables = [];
      var coursesTotal = "#{data}";
      coursesTotal = JSON.parse(coursesTotal.replace(/&quot;/ig,'"'))
      var courseLists = "#{courseLists}";
      courseLists = JSON.parse(courseLists.replace(/&quot;/ig,'"'))
      var courses = coursesTotal; 


      var addCourseToGroup = function(Td, group){
        var row;
        var aPos;
        $.each(coursesTables, function(key, table){
          aPos = table.fnGetPosition(Td);
          row = table.fnGetData(aPos[0]);
          table.fnDeleteRow(aPos[0]);
        });
        var credits = row.Credit;
        courses.splice(aPos[0],1);
        var max = parseInt($('#min' + group)[0]['attributes']['max'].value) + parseInt(credits);
        $('#min' + group)[0]['attributes']['max'].value = max;
        $('#max' + group)[0]['attributes']['max'].value = max; 
        $('#max' + group)[0]['attributes']['min'].value =  $('#min' + group)[0].value

        choices[group].push(row);
        choicesTables[group].fnAddData([row]);
      }

      var removeCourseFromGroup = function(Td, group, table){
        var table = choicesTables[group];
        var aPos = table.fnGetPosition(Td);
        var row = table.fnGetData(aPos[0]);
        var credits = row.Credit;
        choices[group].splice(aPos[0],1);
        courses.push(row);
        table.fnDeleteRow(aPos[0]);
        $.each(coursesTables, function(key, coursesTable){
          console.log(row);
          coursesTable.fnAddData([row]);
          var max = parseInt($('#min' + group)[0]['attributes']['max'].value) - parseInt(credits);
          $('#min' + group)[0]['attributes']['max'].value = max;
          $('#max' + group)[0]['attributes']['max'].value = max;
 
        });
      }

      var createGroup = function(){
        var group = groupCounter
        groupCounter++;
        choices.push([]);
        $('#main').append("<div class='row' group='"+ group + "'><div class='panel panel-primary'><div class='panel-heading'>Group: " + (group + 1) + "</div><div class='panel-body'><div class='col-md-6'><div class='form-group'><div class='input-group'>Minimum Credits: <input type='number' name='min' min='0' max='0' required id='min" + group+ "''>   Maximum: <input type='number' name='max' min='0' max='0' required id='max" + group+ "''></div></div><table cellpadding='0' cellspacing='0' border='0' class='display dataTable' id='choices" + group + "' group='"+ group + "'></table></div><div class='col-md-6'><table class='tableTest' cellpadding='0' cellspacing='0' border='0' class='display dataTable' group='"+ group + "' id='courses" + group + "'></table></div></div></div>");
        var choicesDataTable = $('#choices'+group).dataTable({
          "bFilter": false,
          "bInfo": false,
          "bPaginate": false,
          "bAutoWidth": false,
          "sScrollY": "300px",
          "aaData": choices[group],
          "sStripeOdd":true,
          "aoColumns": [
            {
            "mData": function (data, type, val) {
              return "<button type='button' group=" + group + " class='btn btn-primary' id='remove'>Remove</button>"
            },
            "fnCreatedCell": function(Td, sData, oData, iRow, iCol){
              var btn = $(Td)['context']['firstChild']; //Terrible coding.. cannot get anything else to work so this will be OK for demonstration purposes.
              var button = $(btn);
              
              button.click(function(){
                removeCourseFromGroup(Td, group);
              });
              }, "sTitle": "Remove", "sWidth": 25
            },
            {"mData":"CourseId", "sTitle": "Course ID", "sWidth": 30 },
            {"mData":"Semester", "sTitle": "Semester", "sWidth": 30 },
            {"mData": "Name", "sTitle": "Course Name", "sWidth": 30 },
            {"mData": "Credit", "sTitle": "Credits", "sWidth": 20},
            ]
          });
          var coursesDataTable = $('#courses'+group).dataTable( {
            "aaData": courses,
            "aoColumns": [
              {
                "mData": function (data, type, val) {
                  return "<button type='button' group=" + group + " class='btn btn-primary' id='select'>Select</button>"
                },
                "fnCreatedCell": function(Td, sData, oData, iRow, iCol){
                  var btn = $(Td)['context']['firstChild']; //Terrible coding.. cannot get anything else to work so this will be OK for demonstration purposes.
                  var button = $(btn);
                  var table = $('#courses' + group);
                  button.click(function(){
                    addCourseToGroup(Td, group);
                  });
                },
                "sTitle": "Select", "sWidth":50 },
              {"mData":"CourseId", "sTitle": "Course ID", "sWidth":40 },
              {"mData": "Name", "sTitle": "Course Name", "sWidth":40 },
              {"mData":"Semester", "sTitle": "Semester", "sWidth": 30 },
              {"mData": "Credit", "sTitle": "Credits", "sWidth":20 },
              {"mData": "Level", "sTitle": "Level", "sWidth":20 },  
          ],
        });
        $('#min' + group).blur(function(){

          $('#max' + group)[0]['attributes']['min'].value =  $(this)[0].value
        });
        coursesTables.push(coursesDataTable);
        choicesTables.push(choicesDataTable)
      };  


      createGroup();
      $('#addGroup').click(function(){
        createGroup();
      });

      $("#levelFilter").change(function(){
        console.log(coursesTables);
        var level = $(this)[0].value;
        if (level != "None"){
          $.each(coursesTables, function(key, value){
            console.log($(this));

            value.fnFilter(level, 5);
          });
        } else {
          $.each(coursesTables, function(key, value){
            console.log($(this));

            value.fnFilter("", 5);
          });
        }
      });
      
      var getSubmitValues = function(){
        var details = {
          "groups": [],
          "listName": $('#CourseListName')[0].value,
        }
        if(courseLists.indexOf(details.listName)!=-1){
          return false;
        }
        var data = [];
        for (var i = 0; i<groupCounter; i++){
          if (choices[i] != []){
            var group = {};
            var min = $('#min' + i)[0].valueAsNumber;
            var max = $('#max' + i)[0].valueAsNumber;

            group.min = min;
            group.max = max;
            group.courses = choices[i];
            details.groups.push(group);
          }
         }
        return details;
      }
      $('#courselist').submit(function () {
        var data = getSubmitValues();
        if(!data){
          $("#alert").empty();
          $("#alert").append("<div class='alert alert-dismissable alert-info'>Course List Name " + $('#CourseListName')[0].value + "is already in use</div>");
          return false;
        }
        $.ajax({
            url: "/CreateCourseList",
            async: false,
            type: "POST",
            data: data,
            contentType: "application/x-www-form-urlencoded",
            dataType: "json",
        });
        return true;
      });
    });

  head
    - var school = School;
    - var degree = Degree;
    .navbar.navbar-inverse.navbar-fixed-top(role='navigation')
      .container
        .navbar-header
          button.navbar-toggle(type='button', data-toggle='collapse', data-target='.navbar-collapse')
            span.sr-only Toggle navigation
        .collapse.navbar-collapse
          ul.nav.navbar-nav
            li
              a(href='./home') Home
            li
              a(href='./advisor') Advisor
            li
              a(href='./lecturer.html') Lecturer
            li.active
              a(href='./school') School
            li
              a(href='./DHY.html') Dept Head of Year
            li
              a(href='./help.html') Help
          ul.nav.navbar-nav.pull-right
            li
              a(href='/logout') Logout
        //
          /.nav-collapse 
  body
    .container
      .row
        ol.breadcrumb
          li
            a(href='./school')
              = school
          li.active
            | Create Course List
        form#courselist(role='form', action='./school')
          #main.container
            .row
              button#addGroup.btn.btn-primary(type='button') Add Group
              .form-group
                .input-group
                  .col-md-7
                    label(for='CourseListNameLabel') CourseList Name
                    input#CourseListName.form-control(type='text', required='required', placeholder='Assign Course List Name')
                  .col-md-5
                    | Level: 
                    select.selectpicker#levelFilter
                      option None
                      option 1
                      option 2
                      option 3
                      option 4
                      option M
          .container
            button#submit.btn.btn-primary(type='text') Submit

  
